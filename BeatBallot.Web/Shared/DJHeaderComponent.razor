@* DJHeaderComponent.razor *@

<div class="dj-header">
    <div class="header-left">
        <div class="logo-section">
            <div class="logo">BeatBallot</div>
            <div class="logo-subtitle">DJ Dashboard</div>
        </div>
    </div>

    <div class="header-right">
        <div class="user-account">
            <div class="user-info">
                <div class="user-avatar">
                    @if (!string.IsNullOrEmpty(UserProfileImage))
                    {
                        <img src="@UserProfileImage" alt="@UserDisplayName" class="avatar-image" />
                    }
                    else
                    {
                        <div class="avatar-placeholder">@GetInitials()</div>
                    }
                </div>
                <div class="user-details">
                    <div class="user-name">@UserDisplayName</div>
                    <div class="user-status">@UserStatus</div>
                </div>
            </div>

            <div class="account-dropdown" @onclick="ToggleDropdown">
                <button class="dropdown-toggle" @onclick:stopPropagation="true">
                    <span class="dropdown-icon">⋮</span>
                </button>

                @if (showDropdown)
                {
                    <div class="dropdown-menu">
                        <div class="dropdown-item" @onclick="ViewProfile">
                            <span class="item-icon">👤</span>
                            <span>View Profile</span>
                        </div>
                        <div class="dropdown-item" @onclick="AccountSettings">
                            <span class="item-icon">⚙️</span>
                            <span>Account Settings</span>
                        </div>
                        <div class="dropdown-item" @onclick="ConnectSpotify">
                            <span class="item-icon">🎵</span>
                            <span>Spotify Connection</span>
                        </div>
                        <div class="dropdown-divider"></div>
                        <div class="dropdown-item logout" @onclick="Logout">
                            <span class="item-icon">🚪</span>
                            <span>Sign Out</span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public string UserDisplayName { get; set; } = "DJ Master";
    [Parameter] public string UserProfileImage { get; set; } = "";
    [Parameter] public string UserStatus { get; set; } = "Online";
    [Parameter] public EventCallback OnProfileView { get; set; }
    [Parameter] public EventCallback OnAccountSettings { get; set; }
    [Parameter] public EventCallback OnSpotifyConnect { get; set; }
    [Parameter] public EventCallback OnLogout { get; set; }

    private bool showDropdown = false;

    private void ToggleDropdown()
    {
        showDropdown = !showDropdown;
    }

    private string GetInitials()
    {
        if (string.IsNullOrEmpty(UserDisplayName)) return "DJ";

        var names = UserDisplayName.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (names.Length >= 2)
            return $"{names[0][0]}{names[1][0]}".ToUpper();

        return names[0].Substring(0, Math.Min(2, names[0].Length)).ToUpper();
    }

    private async Task ViewProfile()
    {
        showDropdown = false;
        await OnProfileView.InvokeAsync();
    }

    private async Task AccountSettings()
    {
        showDropdown = false;
        await OnAccountSettings.InvokeAsync();
    }

    private async Task ConnectSpotify()
    {
        showDropdown = false;
        await OnSpotifyConnect.InvokeAsync();
    }

    private async Task Logout()
    {
        showDropdown = false;
        await OnLogout.InvokeAsync();
    }

    protected override void OnInitialized()
    {
        // Close dropdown when clicking outside
        // This would typically be handled with JavaScript interop
    }
}

<style>
    .dj-header {
        background: linear-gradient(135deg, #2c3e50 0%, #34495e 100%);
        border-bottom: 2px solid rgba(255,255,255,0.1);
        padding: 0 20px;
        height: 70px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        position: sticky;
        top: 0;
        z-index: 1000;
        box-shadow: 0 4px 20px rgba(0,0,0,0.1);
    }

    .header-left {
        display: flex;
        align-items: center;
    }

    .logo-section {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .logo {
        font-size: 1.8em;
        font-weight: bold;
        background: linear-gradient(45deg, #e74c3c, #f39c12);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .logo-subtitle {
        color: rgba(255,255,255,0.8);
        font-size: 0.9em;
        font-weight: 500;
    }

    .header-right {
        display: flex;
        align-items: center;
    }

    .user-account {
        display: flex;
        align-items: center;
        gap: 15px;
        position: relative;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .user-avatar {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        overflow: hidden;
        border: 2px solid #f39c12;
    }

    .avatar-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .avatar-placeholder {
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg, #e74c3c, #f39c12);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: bold;
        font-size: 0.9em;
    }

    .user-details {
        text-align: left;
    }

    .user-name {
        color: white;
        font-weight: 600;
        font-size: 1em;
        margin-bottom: 2px;
    }

    .user-status {
        color: #2ecc71;
        font-size: 0.8em;
        font-weight: 500;
    }

    .account-dropdown {
        position: relative;
    }

    .dropdown-toggle {
        background: rgba(255,255,255,0.1);
        border: 1px solid rgba(255,255,255,0.2);
        border-radius: 8px;
        padding: 8px 12px;
        cursor: pointer;
        transition: all 0.3s ease;
        color: white;
    }

        .dropdown-toggle:hover {
            background: rgba(255,255,255,0.2);
            transform: translateY(-1px);
        }

    .dropdown-icon {
        font-size: 1.2em;
        font-weight: bold;
    }

    .dropdown-menu {
        position: absolute;
        top: 110%;
        right: 0;
        background: rgba(0,0,0,0.9);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255,255,255,0.1);
        border-radius: 12px;
        padding: 8px 0;
        min-width: 200px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        z-index: 1001;
    }

    .dropdown-item {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        color: rgba(255,255,255,0.9);
        font-size: 0.9em;
    }

        .dropdown-item:hover {
            background: rgba(255,255,255,0.1);
            color: white;
        }

        .dropdown-item.logout {
            color: #e74c3c;
        }

            .dropdown-item.logout:hover {
                background: rgba(231,76,60,0.1);
                color: #c0392b;
            }

    .item-icon {
        font-size: 1.1em;
        width: 20px;
        text-align: center;
    }

    .dropdown-divider {
        height: 1px;
        background: rgba(255,255,255,0.1);
        margin: 8px 0;
    }
</style>